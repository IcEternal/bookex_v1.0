/*
********************
  =user interface
********************
*/
用户注册：
	1. 提供 用户名 密码 手机 邮箱 学号 寝室 支付宝账号(学校，头像)
		如果使用银行卡作为账号，需要提供真实姓名
	2. 记录用户注册时间

上传书本：
	1. 提供 书名 作者 出版社 ISBN 图片 原价 售价 图书分类 简介 是否愿意自行出售
	2. 记录 用户的愿意自行出售 选项
	3. 豆瓣API的 图片搜索功能 以及 ISBN搜索功能
	4. 自动分类的实现 

搜索书本：
	use query string

分类浏览：
	use query string

预订书本：
	预订后，若卖家愿意自行交易，则买家选择是否自行交易。
	
推荐书本：
	根据用户的学号，判断出用户的年级、专业。
	从以往的历史记录中，可以知道某年级某专业的学生需要什么书，然后给出推荐书本列表。

心愿单：
	用户从两个地方可以添加心愿书本：
	1.从推荐书本中，（搜索出来的书都是有库存的书，推荐书本根据历史数据得出，可以是当时没有库存的书），当时没有库存的书，可以添加到心愿单。
	2.从用户管理界面添加，添加方式跟上传书本类似。
	使用心愿单：心愿单中的书有人上传时，发送邮件或这短信通知。



/*
********************
  =admin interface
********************
*/

/*
********************
  =database level
********************
*/

NOTICE: 为了统一，跟日期有关的都以time为后缀吧
NOTICE：admin_book_search & admin_user_search 的字段是否有点冗余？
这两个表都可以不要了
时间可以用stamptime，时间戳，可以在数据库中设置默认记录添加时间
速度快，而且使用起来挺方便的。

考虑dropbox图片托管
存放大图与小图

user:
	id
	username
	password
	phone
	email
	student_number
	dormitory
	alipay
	school
	show_phone
	register_time
	remarks

admin://不同权限?
	id
	user_id
	username
	view_book
	del_user
	del_book
	modify_user
	modify_book
	remarks

book://图片文件系统，上线时给你展示下dropbox的图片管理
	id
	name
	author
	price
	publisher
	ISBN
	decription
	uploader
	subscriber
	originprice
	img
	hasimg
	class
	show_phone
	use_phone
	del
	deltime
	subscribetime
	finishtime
	uploadtime
	remarks

user_book_search:
	id
	username
	view_or_search
	search_time
	key
	class
	remarks

book_collect:
	bc_id
	title
	author
	translator
	price
	publisher
	pubtime
	ISBN
	img
	remarks

subscribe_records:
	id
	book_id
	subscriber_id
	subscribetime
	canceled
	trade_records_id
	remarks
	
trade_records:
	id
	sub_records_id
	book_id
	buyer_id
	finishtime
	canceled
	remarks	

admin_book_search:
	bs_id
	book_info
	uploader
	subscriber
	no_reserve
	reserved
	traded
	admin_name
	bs_time

admin_user_search:
	us_id
	username
	phone
	email
	student_number
	order_by_up
	admin_name
	us_time







